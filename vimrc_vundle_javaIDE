"-----------------------------------------------
" general configuration 
"-----------------------------------------------
set nocompatible   " set nocompatible with old vi
filetype off
"--
"***********************************************************Pathogen****
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
"-----must have
Bundle 'vundle'
"------------------
Bundle 'a.vim'
Bundle 'AutoPairs'
Bundle 'Ctrlp'
Bundle 'DrawIt'
Bundle 'indentLine'
Bundle 'Mark'
Bundle 'nerdCommenter'
Bundle 'snipMate'
Bundle 'Nerdtree'
Bundle 'Airline'
Bundle 'Tagbar'
Bundle 'TxtBrowser'
Bundle 'syntastic'
Bundle 'TagHighlight'
"----------------------
set encoding=utf-8                                    
set fileencoding=utf-8              
set fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1
set fileformat=unix 
set fileformats=unix,dos,mac  
"---
filetype on
filetype plugin on
filetype indent on
filetype plugin indent on
let mapleader='\'
let maplocalleader=';'
set shiftwidth=4
set softtabstop=4
set tabstop=4 
set expandtab
set smarttab
" --------------
syntax on                       "Auto-highlight syntax         
set t_Co=256
colorscheme molokai            "Theme
" colorscheme solarized           "Theme
"colorscheme bandit            "Theme
"colorscheme Tomorrow-Night            "Theme
set background=dark             "set back ground
set nu                          "display line number
set noshowcmd
" set paste                       "the string will not disorder
set history=700
set autoread
set autochdir                   "auto cd - the current file 's dir
set autoindent                   "auto cd - the current file 's dir
set smartindent                 "auto_indent when new line
"set cursorline                  "stress the current line
set ruler                       "open the status ruler  
" au BufWinEnter * let w:m2=matchadd('Underlined', '\%>' . 80 . 'v.\+', -1)
set vb t_vb=
set nobackup                    "cover a file no backup
set backupcopy=yes              
set ignorecase smartcase        "ignor the case when search
set nowrapscan                  "no while when serach            
set nowrap
set incsearch                
set hlsearch                    "highlight the search result
set wrap
set showmatch                   "find the match {,(
set matchtime=2
set cmdheight=1                 "heigh of cms window
set laststatus=2                "dispaly the status bar
set guioptions-=T               "gui relate
set guioptions-=m               "gui relate
set backspace=indent,eol,start  "don't clear
"set novisualbell               "not visualbell
"---
set foldenable
"set foldopen=all               "When curse , auto_open fold
"set foldclose=all              "When curse , auto-close fold
set foldmethod=indent           "mark ,manual , expr, syntax,diff ,indent
set foldlevel=100              "No fold when open a file
mapclear
nmapclear 
vmapclear
imapclear
cmapclear
nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>   
nmap cS :%s/\s\+$//g<CR>:noh<CR>    " space clear
nmap cM :%s/\r$//g<CR>:noh<CR>      " M     clear
nmap <c-k> <c-w>k                                                        
nmap <c-j> <c-w>j
nmap <c-h> <c-w>h
nmap <c-l> <c-w>l
imap <c-j> <Down>
imap <c-k> <Up>
imap <c-h> <Left>
imap <c-l> <Right>
"--- source $VIMRUNTIME/mswin.vim behave mswin "---return the curren OS 's type 
function! MySys() 
    if has("win16") || has("win32") || has("win64") || has("win95")
        return "windows"
    elseif has("unix")
        return "linux"
    endif
endfunction
"---set the $VIMFILES
if MySys() == "windows"
    let $VIMFILES = $VIM.'/vimfiles'
elseif MySys() == "linux"
    let $VIMFILES = $HOME.'/.vim'
endif 
"---
let helptags=$VIMFILES.'/doc'

"**********************************************************window actions****
nnoremap <F1> :tabnew<CR>   
"UnUsed  <F2>   

"**********************************************************NERDTree**********
nmap     <F3> :NERDTreeToggle<CR>
"let loaded_nerd_tree=1
"let NERDTreeIgnore=['/.vim$','/~$']
let NERDTreeShowHidden=0  
let NERDTreeSortOrder=['//$','/.cpp$','/.c$','/.h$','*']
let NERDTreeCaseSensitiveSort=0
let NERDTreeWinSize=20
let NERDTreeShowLineNumbers=0  
let NERDTreeShowBookmarks=0
let NERDTreeQuitOnOpen=0
let NERDTreeHighlightCursorline=1

"***********************************************************TagBar**********
" Replace the  taglist
" F3 to call the function
" To display the obj and var in the current file
nmap <F4> :TagbarToggle<CR>
let g:Tagbar_Ctags_Cmd='/usr/bin/ctags'
let g:Tagbar_Show_One_File=1
let g:Tagbar_Exit_OnlyWindow=1
let g:Tagbar_File_Fold_Auto_Close=0
let g:Tagbar_WinWidth=20
let g:Tagbar_WinHeight=20
let g:Tagbar_Auto_Open=0
let g:Tagbar_GainFocus_On_ToggleOpen=1
let g:Tagbar_Use_Right_Window=0

"***********************************************************tab cycles****
nnoremap <F5> :tabp<CR>   
nnoremap <F6> :tabn<CR>   

"***********************************************************Compile&Build****
map <F7> :!cd %:p:h && javac -cp ../../lib:../../bin -sourcepath ../../bin -Djava.ext.dirs=../../lib -d ../../bin *.java<CR> 
map <F8> :!cd %:p:h && java -cp ../../bin -Djava.ext.dirs=../../lib %:p:h:t.%:p:t:r<CR>
"Unused  <F9>    
"Unused  <F10> 

"***********************************************************For Paste****
set pastetoggle=<F11>

"*******************V***************************************ctags********
"set tags=~/McasCode/r45/tags
set tags=./tags;
set autochdir
nmap <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q<CR> 


"***********************************************************Syntastic****
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
"let g:syntastic_java_javac_args="-cp ../../lib:../../bin -sourcepath ../../bin -Djava.ext.dirs=../../lib -d ../../bin"  
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

"*************************************************************Cscope****
"---
"*************************************************************A.vim****
"---
"*************************************************************MiniBufExplore(disable due to duplicate with ctrlP)
"---
"*************************************************************CtrlP***
"---
"*************************************************************DrawIt***
"---
"*************************************************************Mark***
"---
"*************************************************************TxtBrowser***
"---
"*************************************************************Snipmate***
"---
"*************************************************************Supertab(disabled,confilict"with Snipmate)***
"---

"*************************************************************IndentLine****
cnoremap il IndentLinesToggle<CR>
let g:indentLine_char = "|"
let g:indentLine_first_char = "|"
let g:indentLine_color_term=128

"**************************************************************Auto_pairs****
let g:AutoPairsShortcutToggle = '<leader>ap'

"**************************************************************NERDComment****
let NERDSpaceDelims = 1 

"***********************************************************AirLine***
cnoremap al AirlineToggle<CR>  
"let laststatus=2
"let g:airline_left_sep='>'
"let g:airline_right_sep='<'
"let g:airline_detect_modified=1
""let g:airline_detect_paste=1
"set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 13
"let g:airline_powerline_fonts = 1
"let g:airline_theme='airlineish'
"let g:airline_section_b = '%{strftime("%c")}'
"let g:airline_section_y = 'BN: %{bufnr("%")}'
"let g:airline#extensions#tavline#enabled = 1



